specVersion: v0.1.0
package:
  name: "decentraland_substreams"
  version: v1.0.4

protobuf:
  files:
    - database.proto
    - dcl.proto

  importPaths:
    - ./proto

binaries:
  default:
    type: wasm/rust-v1
    file: ./target/wasm32-unknown-unknown/release/substreams.wasm

modules:
  - name: map_collection_created
    kind: map
    initialBlock: 14517370
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:dcl.Collections

  - name: store_collections
    kind: store
    initialBlock: 14517370
    updatePolicy: set
    valueType: string
    inputs:
      - map: map_collection_created

  - name: map_collection_set_approved_event
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.CollectionSetApprovedEvents

  - name: map_item_update_data_event
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.ItemUpdateDataEvents

  - name: map_item_rescue_event
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.RescueItemEvents

  - name: map_collection_set_global_minter_event
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.CollectionSetGlobalMinterEvents

  - name: map_collection_set_item_minter_event
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.SetItemMinterEvents

  - name: map_collection_transfer_creatorship
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.CollectionTransferCreatorshipEvents

  - name: map_collection_transfer_ownership
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.CollectionTransferOwnershipEvents

  - name: map_issues
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.NFTs

  - name: store_nfts_item
    kind: store
    initialBlock: 14517370
    updatePolicy: set
    valueType: string
    inputs:
      - map: map_issues

  - name: map_add_items
    kind: map
    initialBlock: 14517370
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
      - map: map_collection_created # depends on the map and not store because the AddItem happens in the same block as the ProxyCreated event, so the store won't have the address yet
    output:
      type: proto:dcl.Items

  - name: map_transfers_v2
    kind: map
    initialBlock: 14517370
    inputs:
      - source: sf.ethereum.type.v2.Block
      - store: store_collections
    output:
      type: proto:dcl.TransferEvents

  # Orders
  - name: map_order_created
    kind: map
    initialBlock: 14517370
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:dcl.Orders

  - name: map_order_executed
    kind: map
    initialBlock: 14517370
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:dcl.Orders

  - name: map_order_cancelled
    kind: map
    initialBlock: 14517370
    inputs:
      - params: string
      - source: sf.ethereum.type.v2.Block
    output:
      type: proto:dcl.Orders

  - name: db_out_polygon
    initialBlock: 14517370
    kind: map
    inputs:
      - params: string
      - map: map_collection_created
      - map: map_add_items
      - map: map_issues
      - map: map_transfers_v2
      - map: map_collection_set_approved_event
      - map: map_collection_set_global_minter_event
      - map: map_collection_set_item_minter_event
      - map: map_collection_transfer_creatorship
      - map: map_collection_transfer_ownership
      - map: map_item_update_data_event
      - map: map_item_rescue_event
      - map: map_order_created
      - map: map_order_executed
      - map: map_order_cancelled
      - store: store_nfts_item
    output:
      type: proto:sf.substreams.sink.database.v1.DatabaseChanges

params:
  db_out: "mumbai"
  map_add_items: "mumbai"
  map_collection_created: "mumbai"
  map_order_created: "mumbai"
  map_order_executed: "mumbai"
  map_order_cancelled: "mumbai"

network: mumbai

imports:
  sql: https://github.com/streamingfast/substreams-sink-sql/releases/download/protodefs-v1.0.3/substreams-sink-sql-protodefs-v1.0.3.spkg

sink:
  module: db_out_polygon
  type: sf.substreams.sink.sql.v1.Service
  config:
    schema: "./schema.sql"
